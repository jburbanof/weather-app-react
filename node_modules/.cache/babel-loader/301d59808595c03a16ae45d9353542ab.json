{"ast":null,"code":"var _jsxFileName = \"/home/julian/Desktop/gitReps/weather-app-react/src/Pages/MainPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CityList from \"../Components/CityList\";\nimport AppFrame from \"../Components/AppFrame\";\nimport Search from \"../Components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = ({\n  actions,\n  data\n}) => {\n  _s();\n\n  const history = useHistory();\n\n  const onClickHandler = (city, countryCode) => {\n    history.push(`/city/${countryCode}/${city}`);\n  };\n\n  const [cityCountry, setCityCountry] = useState([]);\n\n  const createNewTask = (newCity, newCountryCode) => {\n    setCityCountry([...cityCountry, {\n      city: newCity,\n      countryCode: newCountryCode\n    }]);\n  };\n\n  const eventOnClickDelete = city => {\n    setCityCountry([...cityCountry].filter(i => {\n      return i.city !== city;\n    }));\n  };\n\n  useEffect(() => {\n    let data = JSON.parse(localStorage.getItem(\"cityCountry\"));\n\n    if (data.length === 0) {\n      setCityCountry([{\n        city: \"Bogotá\",\n        countryCode: \"CO\"\n      }]);\n      console.log(\"test\", cityCountry);\n    } else {\n      setCityCountry(data);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"cityCountry\", JSON.stringify(cityCountry));\n  });\n  return /*#__PURE__*/_jsxDEV(AppFrame, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      callback: createNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), cityCountry.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(CityList, {\n        data: data,\n        actions: actions,\n        cities: cityCountry,\n        onClickCity: onClickHandler,\n        eventOnClickDelete: eventOnClickDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"p/2cpHItjV72V4SvKAyr6exgmbY=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Pages/MainPage.jsx"],"names":["React","useState","useEffect","useHistory","Paper","CityList","AppFrame","Search","MainPage","actions","data","history","onClickHandler","city","countryCode","push","cityCountry","setCityCountry","createNewTask","newCity","newCountryCode","eventOnClickDelete","filter","i","JSON","parse","localStorage","getItem","length","console","log","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAAA;;AACtC,QAAMC,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,cAAc,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AAC5CH,IAAAA,OAAO,CAACI,IAAR,CAAc,SAAQD,WAAY,IAAGD,IAAK,EAA1C;AACD,GAFD;;AAIA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMiB,aAAa,GAAG,CAACC,OAAD,EAAUC,cAAV,KAA6B;AACjDH,IAAAA,cAAc,CAAC,CACb,GAAGD,WADU,EAEb;AAAEH,MAAAA,IAAI,EAAEM,OAAR;AAAiBL,MAAAA,WAAW,EAAEM;AAA9B,KAFa,CAAD,CAAd;AAID,GALD;;AAMA,QAAMC,kBAAkB,GAAIR,IAAD,IAAU;AACnCI,IAAAA,cAAc,CACZ,CAAC,GAAGD,WAAJ,EAAiBM,MAAjB,CAAyBC,CAAD,IAAO;AAC7B,aAAOA,CAAC,CAACV,IAAF,KAAWA,IAAlB;AACD,KAFD,CADY,CAAd;AAKD,GAND;;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAI,GAAGc,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAX;;AAGA,QAAIjB,IAAI,CAACkB,MAAL,KAAgB,CAApB,EAAuB;AACrBX,MAAAA,cAAc,CAAC,CAAC;AAAEJ,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,WAAW,EAAE;AAA/B,OAAD,CAAD,CAAd;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBd,WAApB;AACD,KAHD,MAGO;AACLC,MAAAA,cAAc,CAACP,IAAD,CAAd;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAWAR,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,YAAY,CAACK,OAAb,CAAqB,aAArB,EAAoCP,IAAI,CAACQ,SAAL,CAAehB,WAAf,CAApC;AACD,GAFQ,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,EAGGF,WAAW,CAACY,MAAZ,GAAqB,CAArB,iBACC,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,IAAI,EAAElB,IADR;AAEE,QAAA,OAAO,EAAED,OAFX;AAGE,QAAA,MAAM,EAAEO,WAHV;AAIE,QAAA,WAAW,EAAEJ,cAJf;AAKE,QAAA,kBAAkB,EAAES;AALtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtDD;;GAAMb,Q;UACYL,U;;;KADZK,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CityList from \"../Components/CityList\";\nimport AppFrame from \"../Components/AppFrame\";\nimport Search from \"../Components/Search\";\n\nconst MainPage = ({ actions, data }) => {\n  const history = useHistory();\n\n  const onClickHandler = (city, countryCode) => {\n    history.push(`/city/${countryCode}/${city}`);\n  };\n\n  const [cityCountry, setCityCountry] = useState([]);\n\n  const createNewTask = (newCity, newCountryCode) => {\n    setCityCountry([\n      ...cityCountry,\n      { city: newCity, countryCode: newCountryCode },\n    ]);\n  };\n  const eventOnClickDelete = (city) => {\n    setCityCountry(\n      [...cityCountry].filter((i) => {\n        return i.city !== city;\n      })\n    );\n  };\n  useEffect(() => {\n    let data = JSON.parse(localStorage.getItem(\"cityCountry\"));\n    \n\n    if (data.length === 0) {\n      setCityCountry([{ city: \"Bogotá\", countryCode: \"CO\" }]);\n      console.log(\"test\", cityCountry);\n    } else {\n      setCityCountry(data);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"cityCountry\", JSON.stringify(cityCountry));\n  });\n\n  return (\n    <AppFrame>\n      <Search callback={createNewTask} />\n\n      {cityCountry.length > 0 && (\n        <Paper elevation={3}>\n          <CityList\n            data={data}\n            actions={actions}\n            cities={cityCountry}\n            onClickCity={onClickHandler}\n            eventOnClickDelete={eventOnClickDelete}\n          />\n        </Paper>\n      )}\n    </AppFrame>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}