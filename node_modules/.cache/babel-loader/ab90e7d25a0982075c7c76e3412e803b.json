{"ast":null,"code":"import React,{useMemo}from\"react\";import Typography from\"@material-ui/core/Typography\";import Grid from\"@material-ui/core/Grid\";import{IconContext}from\"react-icons\";import IconState,{validValues}from\"../IconState\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ForecastItem=function ForecastItem(_ref){var weekDay=_ref.weekDay,hour=_ref.hour,state=_ref.state,temperature=_ref.temperature;var iconContextSize=useMemo(function(){return{size:\"5em\"};},[]);return/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",justifyContent:\"center\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{children:weekDay})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Typography,{children:[hour,\":00h\"]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(IconContext.Provider,{value:iconContextSize,children:/*#__PURE__*/_jsx(IconState,{state:state})})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Typography,{children:[temperature,\"\\xB0C\"]})})]});};export default ForecastItem;","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Components/ForecastItem/ForecastItem.jsx"],"names":["React","useMemo","Typography","Grid","IconContext","IconState","validValues","ForecastItem","weekDay","hour","state","temperature","iconContextSize","size"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CAEA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,SAAP,EAAoBC,WAApB,KAAuC,cAAvC,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA2C,IAAxCC,CAAAA,OAAwC,MAAxCA,OAAwC,CAA/BC,IAA+B,MAA/BA,IAA+B,CAAzBC,KAAyB,MAAzBA,KAAyB,CAAlBC,WAAkB,MAAlBA,WAAkB,CAC9D,GAAMC,CAAAA,eAAe,CAAGX,OAAO,CAAC,iBAAO,CAAEY,IAAI,CAAE,KAAR,CAAP,EAAD,CAAyB,EAAzB,CAA/B,CACA,mBACE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,QAA1B,CAAmC,cAAc,CAAC,QAAlD,CAA2D,UAAU,CAAC,QAAtE,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,KAAC,UAAD,WAAaL,OAAb,EADF,EADF,cAIE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,MAAC,UAAD,YAAaC,IAAb,UADF,EAJF,cAOE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEG,eAA7B,uBACE,KAAC,SAAD,EAAW,KAAK,CAAEF,KAAlB,EADF,EADF,EAPF,cAYE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,MAAC,UAAD,YAAaC,WAAb,WADF,EAZF,GADF,CAkBD,CApBD,CA6BA,cAAeJ,CAAAA,YAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconContext } from \"react-icons\";\nimport IconState, { validValues } from \"../IconState\";\n\nconst ForecastItem = ({ weekDay, hour, state, temperature }) => {\n  const iconContextSize = useMemo(() => ({ size: \"5em\" }),[])\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n      <Grid item>\n        <Typography>{weekDay}</Typography>\n      </Grid>\n      <Grid item>\n        <Typography>{hour}:00h</Typography>\n      </Grid>\n      <Grid item>\n        <IconContext.Provider value={iconContextSize}>\n          <IconState state={state} />\n        </IconContext.Provider>\n      </Grid>\n      <Grid item>\n        <Typography>{temperature}Â°C</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nForecastItem.propTypes = {\n  weekDay: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  state: PropTypes.oneOf(validValues).isRequired,\n  temperature: PropTypes.number.isRequired,\n};\n\nexport default ForecastItem;\n"]},"metadata":{},"sourceType":"module"}