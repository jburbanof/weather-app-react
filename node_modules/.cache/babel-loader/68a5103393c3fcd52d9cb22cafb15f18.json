{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport getChartData from \"../Utilities/transform/getChartData\";\nimport { getForecastUrl } from \"../Utilities/urls\";\nimport getForecastItemList from \"../Utilities/transform/getForecastItemList\";\n\nconst useCityPage = (onSetChartData, onSetForecastItemList) => {\n  _s();\n\n  //const [chartData, setChartData] = useState(null);\n  //const [forecastItemList, setForecastItemList] = useState(null);\n  const {\n    city,\n    countryCode\n  } = useParams();\n  useEffect(() => {\n    const getForecast = async () => {\n      const url = getForecastUrl(city, countryCode);\n\n      try {\n        const {\n          data\n        } = await axios.get(url);\n        const dataAux = getChartData(data);\n        onSetChartData(dataAux);\n        const forecastItemListAux = getForecastItemList(data);\n        onSetForecastItemList(forecastItemListAux);\n      } catch (error) {\n        console.log(\"Error\");\n      }\n    };\n\n    getForecast();\n  }, [city, countryCode, onSetForecastItemList, onSetChartData]);\n  return {\n    city,\n    countryCode\n  };\n};\n\n_s(useCityPage, \"K5IKzcF800rXzW86+R9cAGqvAj8=\", false, function () {\n  return [useParams];\n});\n\nexport default useCityPage;","map":{"version":3,"sources":["/home/julian/Desktop/ReactCourse/react-weather-app/src/Hooks/useCityPage.jsx"],"names":["useEffect","useParams","axios","getChartData","getForecastUrl","getForecastItemList","useCityPage","onSetChartData","onSetForecastItemList","city","countryCode","getForecast","url","data","get","dataAux","forecastItemListAux","error","console","log"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;;AAEA,MAAMC,WAAW,GAAG,CAACC,cAAD,EAAiBC,qBAAjB,KAA2C;AAAA;;AAC7D;AACA;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAwBT,SAAS,EAAvC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,WAAW,GAAG,YAAY;AAC9B,YAAMC,GAAG,GAAGR,cAAc,CAACK,IAAD,EAAOC,WAAP,CAA1B;;AAEA,UAAI;AACF,cAAM;AAAEG,UAAAA;AAAF,YAAW,MAAMX,KAAK,CAACY,GAAN,CAAUF,GAAV,CAAvB;AACA,cAAMG,OAAO,GAAGZ,YAAY,CAACU,IAAD,CAA5B;AAEAN,QAAAA,cAAc,CAACQ,OAAD,CAAd;AAEA,cAAMC,mBAAmB,GAAGX,mBAAmB,CAACQ,IAAD,CAA/C;AACAL,QAAAA,qBAAqB,CAACQ,mBAAD,CAArB;AACD,OARD,CAQE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,KAdD;;AAgBAR,IAAAA,WAAW;AACZ,GAlBQ,EAkBN,CAACF,IAAD,EAAOC,WAAP,EAAoBF,qBAApB,EAA2CD,cAA3C,CAlBM,CAAT;AAmBA,SAAO;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AACD,CAxBD;;GAAMJ,W;UAG0BL,S;;;AAuBhC,eAAeK,WAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport getChartData from \"../Utilities/transform/getChartData\";\nimport { getForecastUrl } from \"../Utilities/urls\";\nimport getForecastItemList from \"../Utilities/transform/getForecastItemList\";\n\nconst useCityPage = (onSetChartData, onSetForecastItemList) => {\n  //const [chartData, setChartData] = useState(null);\n  //const [forecastItemList, setForecastItemList] = useState(null);\n  const { city, countryCode } = useParams();\n  useEffect(() => {\n    const getForecast = async () => {\n      const url = getForecastUrl(city, countryCode);\n\n      try {\n        const { data } = await axios.get(url);\n        const dataAux = getChartData(data);\n\n        onSetChartData(dataAux);\n\n        const forecastItemListAux = getForecastItemList(data)\n        onSetForecastItemList(forecastItemListAux);\n      } catch (error) {\n        console.log(\"Error\");\n      }\n    };\n\n    getForecast();\n  }, [city, countryCode, onSetForecastItemList, onSetChartData]);\n  return { city, countryCode};\n};\n\nexport default useCityPage;\n"]},"metadata":{},"sourceType":"module"}