{"ast":null,"code":"var _jsxFileName = \"/home/julian/Desktop/gitReps/weather-app-react/src/Pages/MainPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CityList from \"../Components/CityList\";\nimport AppFrame from \"../Components/AppFrame\";\nimport { getCities } from \"../Utilities/serviceCities\";\nimport Search from \"../Components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = ({\n  actions,\n  data\n}) => {\n  _s();\n\n  const history = useHistory();\n\n  const onClickHandler = (city, countryCode) => {\n    history.push(`/city/${countryCode}/${city}`);\n  };\n\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState([]);\n  const [cityCountry, setCityCountry] = useState([]);\n\n  const createNewTask = (newCity, newCountryCode) => {\n    if (!city.find(t => t.name === city)) {\n      setCity(['city']);\n    }\n\n    console.log(newCity, newCountryCode);\n    console.log(city);\n    setCountryCode([newCountryCode]);\n    console.log(countryCode);\n    console.log(city, countryCode);\n    setCityCountry(() => {\n      return {\n        city,\n        countryCode\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppFrame, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      callback: createNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(CityList, {\n        data: data,\n        actions: actions,\n        cities: getCities(),\n        onClickCity: onClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"T2Pz66j/z44pWEUlPE22gMord78=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Pages/MainPage.jsx"],"names":["React","useState","useHistory","Paper","CityList","AppFrame","getCities","Search","MainPage","actions","data","history","onClickHandler","city","countryCode","push","setCity","setCountryCode","cityCountry","setCityCountry","createNewTask","newCity","newCountryCode","find","t","name","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAAA;;AACtC,QAAMC,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,cAAc,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AAC5CH,IAAAA,OAAO,CAACI,IAAR,CAAc,SAAQD,WAAY,IAAGD,IAAK,EAA1C;AACD,GAFD;;AAGA,QAAM,CAACA,IAAD,EAAOG,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,WAAD,EAAcG,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMmB,aAAa,GAAG,CAACC,OAAD,EAAUC,cAAV,KAA6B;AACjD,QAAI,CAACT,IAAI,CAACU,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWZ,IAA1B,CAAL,EAAsC;AAClCG,MAAAA,OAAO,CAAC,CAAC,MAAD,CAAD,CAAP;AACD;;AACHU,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqBC,cAArB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAI,IAAAA,cAAc,CAAC,CAAEK,cAAF,CAAD,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ,EAAkBC,WAAlB;AACAK,IAAAA,cAAc,CAAC,MAAM;AACnB,aAAO;AACLN,QAAAA,IADK;AAELC,QAAAA;AAFK,OAAP;AAID,KALa,CAAd;AAMD,GAhBD;;AAiBA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEM;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,IAAI,EAAEV,IADR;AAEE,QAAA,OAAO,EAAED,OAFX;AAGE,QAAA,MAAM,EAAEH,SAAS,EAHnB;AAIE,QAAA,WAAW,EAAEM;AAJf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxCD;;GAAMJ,Q;UACYN,U;;;KADZM,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CityList from \"../Components/CityList\";\nimport AppFrame from \"../Components/AppFrame\";\nimport { getCities } from \"../Utilities/serviceCities\";\nimport Search from \"../Components/Search\";\n\nconst MainPage = ({ actions, data }) => {\n  const history = useHistory();\n\n  const onClickHandler = (city, countryCode) => {\n    history.push(`/city/${countryCode}/${city}`);\n  };\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState([]);\n  const [cityCountry, setCityCountry] = useState([]);\n\n  const createNewTask = (newCity, newCountryCode) => {\n    if (!city.find(t => t.name === city)) {\n        setCity(['city']);\n      }\n    console.log(newCity, newCountryCode);\n    \n    console.log(city);\n    setCountryCode([ newCountryCode]);\n    console.log(countryCode);\n    console.log(city, countryCode);\n    setCityCountry(() => {\n      return {\n        city,\n        countryCode,\n      };\n    });\n  };\n  return (\n    <AppFrame>\n      <Search callback={createNewTask} />\n      <Paper elevation={3}>\n        <CityList\n          data={data}\n          actions={actions}\n          cities={getCities()}\n          onClickCity={onClickHandler}\n        />\n      </Paper>\n    </AppFrame>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}