{"ast":null,"code":"var _jsxFileName = \"/home/julian/Desktop/ReactCourse/react-weather-app/src/Components/Weather/Weather.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { WiCloud, WiDayCloudy, WiDayFog, WiDaySunny, WiRain } from \"react-icons/wi\";\nimport { IconContext } from \"react-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validValues = [\"cloud\", \"cloud\", \"fog\", \"sunny\", \"rain\"];\nconst stateByName = {\n  cloud: WiCloud,\n  cloudy: WiDayCloudy,\n  fog: WiDayFog,\n  sunny: WiDaySunny,\n  rain: WiRain\n};\n\nconst renderState = state => {\n  const Icon = stateByName[state];\n  return /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\nconst Weather = ({\n  temperature,\n  state\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: {\n        size: \"5em\"\n      },\n      children: renderState(state)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      display: \"inline\",\n      variant: \"h3\",\n      children: temperature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Weather;\nWeather.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  state: PropTypes.oneOf(validValues).isRequired\n};\nWeather.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Weather\",\n  \"props\": {\n    \"temperature\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"state\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"cloud\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"cloud\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"fog\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"sunny\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"rain\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/Components/Weather/Weather.jsx\"] = {\n    name: \"Weather\",\n    docgenInfo: Weather.__docgenInfo,\n    path: \"src/Components/Weather/Weather.jsx\"\n  };\n}","map":{"version":3,"sources":["/home/julian/Desktop/ReactCourse/react-weather-app/src/Components/Weather/Weather.jsx"],"names":["React","PropTypes","Typography","WiCloud","WiDayCloudy","WiDayFog","WiDaySunny","WiRain","IconContext","validValues","stateByName","cloud","cloudy","fog","sunny","rain","renderState","state","Icon","Weather","temperature","size","propTypes","number","isRequired","oneOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SACEC,OADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,MALF,QAMO,gBANP;AAOA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAnB,EAA0B,OAA1B,EAAmC,MAAnC,CAApB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAER,OADW;AAElBS,EAAAA,MAAM,EAAER,WAFU;AAGlBS,EAAAA,GAAG,EAAER,QAHa;AAIlBS,EAAAA,KAAK,EAAER,UAJW;AAKlBS,EAAAA,IAAI,EAAER;AALY,CAApB;;AAQA,MAAMS,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,IAAI,GAAGR,WAAW,CAACO,KAAD,CAAxB;AACA,sBAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;AAKA,MAAME,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeH,EAAAA;AAAf,CAAD,KAA4B;AAC1C,sBACE;AAAA,4BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAA7B;AAAA,gBACGL,WAAW,CAACC,KAAD;AADd;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAC,IAArC;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;KAAMD,O;AAcNA,OAAO,CAACG,SAAR,GAAoB;AAClBF,EAAAA,WAAW,EAAEnB,SAAS,CAACsB,MAAV,CAAiBC,UADZ;AAElBP,EAAAA,KAAK,EAAEhB,SAAS,CAACwB,KAAV,CAAgBhB,WAAhB,EAA6Be;AAFlB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,eAAeL,OAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  WiCloud,\n  WiDayCloudy,\n  WiDayFog,\n  WiDaySunny,\n  WiRain,\n} from \"react-icons/wi\";\nimport { IconContext } from \"react-icons\";\n\nconst validValues = [\"cloud\", \"cloud\", \"fog\", \"sunny\", \"rain\"]\n\nconst stateByName = {\n  cloud: WiCloud,\n  cloudy: WiDayCloudy,\n  fog: WiDayFog,\n  sunny: WiDaySunny,\n  rain: WiRain,\n}\n\nconst renderState = (state) => {\n  const Icon = stateByName[state];\n  return <Icon />;\n}\n\nconst Weather = ({ temperature, state }) => {\n  return (\n    <div>\n      <IconContext.Provider value={{ size: \"5em\" }}>\n        {renderState(state)}\n      </IconContext.Provider>\n\n      <Typography display=\"inline\" variant=\"h3\">\n        {temperature}\n      </Typography>\n    </div>\n  );\n};\n\nWeather.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  state: PropTypes.oneOf(validValues).isRequired,\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}