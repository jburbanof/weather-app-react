{"ast":null,"code":"var _jsxFileName = \"/home/julian/Desktop/ReactCourse/react-weather-app/src/Components/Search/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CityList from \"../CityList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const history = useHistory();\n  const onClickHandler = useCallback((city, countryCode) => {\n    history.push(`/city/${countryCode}/${city}`);\n  }, [history]);\n  const [city, setCity] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const cities = (city, countryCode) => {\n    const cities = [];\n    cities.push({\n      city: `${city}`,\n      countryCode: `${countryCode}`\n    });\n    console.log(cities);\n    return cities;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      className: \"searchForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setCity(e.target.value),\n        variant: \"outlined\",\n        label: \"City\",\n        className: \"formItem\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setCountryCode(e.target.value),\n        variant: \"outlined\",\n        label: \"Country Code\",\n        className: \"formItem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"formItem\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), cities && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      children: /*#__PURE__*/_jsxDEV(CityList, {\n        cities: cities(city, countryCode),\n        onClickCity: onClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"HcmUiEg4z5QNCSKHaP74vixuVZo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/julian/Desktop/ReactCourse/react-weather-app/src/Components/Search/Search.jsx"],"names":["React","useState","useCallback","useHistory","Paper","TextField","Button","CityList","Search","history","onClickHandler","city","countryCode","push","setCity","setCountryCode","handleSubmit","e","preventDefault","cities","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,cAAc,GAAGR,WAAW,CAChC,CAACS,IAAD,EAAOC,WAAP,KAAuB;AACrBH,IAAAA,OAAO,CAACI,IAAR,CAAc,SAAQD,WAAY,IAAGD,IAAK,EAA1C;AACD,GAH+B,EAIhC,CAACF,OAAD,CAJgC,CAAlC;AAMA,QAAM,CAACE,IAAD,EAAOG,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,WAAD,EAAcG,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAGA,QAAMC,MAAM,GAAG,CAACR,IAAD,EAAOC,WAAP,KAAuB;AACpC,UAAMO,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,CAACN,IAAP,CAAY;AAAEF,MAAAA,IAAI,EAAG,GAAEA,IAAK,EAAhB;AAAmBC,MAAAA,WAAW,EAAG,GAAEA,WAAY;AAA/C,KAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAOA,MAAP;AACD,GALD;;AAMA,sBACE;AAAA,4BACE;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,YAAY,EAAC,KAFf;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,QAAQ,EAAEH,YAJZ;AAAA,8BAME,QAAC,SAAD;AACE,QAAA,QAAQ,EAAGC,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACK,MAAF,CAASC,KAAV,CAD1B;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,SAAS,EAAC,UAJZ;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cANF,eAaE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAGN,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CADjC;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,cAHR;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAbF,eAmBE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,SAAS,EAAC,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EA6BIJ,MAAM,iBACN,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,EAAlB;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,MAAM,EAAEA,MAAM,CAACR,IAAD,EAAOC,WAAP,CADhB;AAEE,QAAA,WAAW,EAAEF;AAFf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA3DD;;GAAMF,M;UACYL,U;;;KADZK,M;AA6DN,eAAeA,MAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CityList from \"../CityList\";\n\nconst Search = () => {\n  const history = useHistory();\n  const onClickHandler = useCallback(\n    (city, countryCode) => {\n      history.push(`/city/${countryCode}/${city}`);\n    },\n    [history]\n  );\n  const [city, setCity] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n  const cities = (city, countryCode) => {\n    const cities = [];\n    cities.push({ city: `${city}`, countryCode: `${countryCode}` });\n    console.log(cities);\n    return cities;\n  };\n  return (\n    <div>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        className=\"searchForm\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          onChange={(e) => setCity(e.target.value)}\n          variant=\"outlined\"\n          label=\"City\"\n          className=\"formItem\"\n          required\n        />\n        <TextField\n          onChange={(e) => setCountryCode(e.target.value)}\n          variant=\"outlined\"\n          label=\"Country Code\"\n          className=\"formItem\"\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"formItem\"\n        >\n          Search\n        </Button>\n      </form>\n      { cities && \n        <Paper elevation={10}>\n          <CityList\n            cities={cities(city, countryCode)}\n            onClickCity={onClickHandler}\n          />\n        </Paper>\n      }\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}