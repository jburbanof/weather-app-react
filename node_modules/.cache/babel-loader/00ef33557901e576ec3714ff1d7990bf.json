{"ast":null,"code":"import moment from\"moment\";import{toCelsius}from\"../utilities\";var getForecastItemList=function getForecastItemList(data){var interval=[3,6,9,12,15,18];var forecastItemListAux=data.list.filter(function(item,index){return interval.includes(index);}).map(function(item){return{hour:moment.unix(item.dt).hour(),weekDay:moment.unix(item.dt).format(\"dddd\"),state:item.weather[0].main.toLowerCase(),temperature:toCelsius(item.main.temp)};});return forecastItemListAux;};export default getForecastItemList;","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Utilities/transform/getForecastItemList.jsx"],"names":["moment","toCelsius","getForecastItemList","data","interval","forecastItemListAux","list","filter","item","index","includes","map","hour","unix","dt","weekDay","format","state","weather","main","toLowerCase","temperature","temp"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,SAAT,KAA0B,cAA1B,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAU,CACpC,GAAMC,CAAAA,QAAQ,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,EAAV,CAAc,EAAd,CAAkB,EAAlB,CAAjB,CAEA,GAAMC,CAAAA,mBAAmB,CAAGF,IAAI,CAACG,IAAL,CACzBC,MADyB,CAClB,SAACC,IAAD,CAAOC,KAAP,QAAiBL,CAAAA,QAAQ,CAACM,QAAT,CAAkBD,KAAlB,CAAjB,EADkB,EAEzBE,GAFyB,CAErB,SAACH,IAAD,CAAU,CACb,MAAO,CACLI,IAAI,CAAEZ,MAAM,CAACa,IAAP,CAAYL,IAAI,CAACM,EAAjB,EAAqBF,IAArB,EADD,CAELG,OAAO,CAAEf,MAAM,CAACa,IAAP,CAAYL,IAAI,CAACM,EAAjB,EAAqBE,MAArB,CAA4B,MAA5B,CAFJ,CAGLC,KAAK,CAAET,IAAI,CAACU,OAAL,CAAa,CAAb,EAAgBC,IAAhB,CAAqBC,WAArB,EAHF,CAILC,WAAW,CAAEpB,SAAS,CAACO,IAAI,CAACW,IAAL,CAAUG,IAAX,CAJjB,CAAP,CAMD,CATyB,CAA5B,CAUA,MAAOjB,CAAAA,mBAAP,CACD,CAdD,CAgBA,cAAeH,CAAAA,mBAAf","sourcesContent":["import moment from \"moment\";\nimport { toCelsius } from \"../utilities\";\n\nconst getForecastItemList = (data) => {\n  const interval = [3, 6, 9, 12, 15, 18];\n\n  const forecastItemListAux = data.list\n    .filter((item, index) => interval.includes(index))\n    .map((item) => {\n      return {\n        hour: moment.unix(item.dt).hour(),\n        weekDay: moment.unix(item.dt).format(\"dddd\"),\n        state: item.weather[0].main.toLowerCase(),\n        temperature: toCelsius(item.main.temp),\n      };\n    });\n  return forecastItemListAux;\n};\n\nexport default getForecastItemList\n"]},"metadata":{},"sourceType":"module"}