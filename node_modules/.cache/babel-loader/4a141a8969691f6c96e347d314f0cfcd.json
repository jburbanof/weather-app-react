{"ast":null,"code":"import React,{useMemo}from\"react\";import Typography from\"@material-ui/core/Typography\";import Skeleton from\"@material-ui/lab/Skeleton\";import{IconContext}from\"react-icons\";import Grid from\"@material-ui/core/Grid\";import IconState,{validValues}from\"./../IconState\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Weather=function Weather(_ref){var temperature=_ref.temperature,state=_ref.state;var iconContextSize=useMemo(function(){return{size:\"6em\"};},[]);return/*#__PURE__*/_jsxs(Grid,{container:true,item:true,direction:\"row\",alignItems:\"center\",justifyContent:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(IconContext.Provider,{value:iconContextSize,children:state?/*#__PURE__*/_jsx(IconState,{state:state}):/*#__PURE__*/_jsx(Skeleton,{variant:\"circle\",height:80,width:80})}),temperature?/*#__PURE__*/_jsxs(Typography,{display:\"inline\",variant:\"h3\",children:[temperature,\"\\xB0C\"]}):/*#__PURE__*/_jsx(Skeleton,{variant:\"circle\",height:80,width:80})]});};export default Weather;","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Components/Weather/Weather.jsx"],"names":["React","useMemo","Typography","Skeleton","IconContext","Grid","IconState","validValues","Weather","temperature","state","iconContextSize","size"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CAEA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,SAAP,EAAoBC,WAApB,KAAuC,gBAAvC,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA4B,IAAzBC,CAAAA,WAAyB,MAAzBA,WAAyB,CAAZC,KAAY,MAAZA,KAAY,CAC1C,GAAMC,CAAAA,eAAe,CAAGV,OAAO,CAAC,iBAAO,CAAEW,IAAI,CAAE,KAAR,CAAP,EAAD,CAA0B,EAA1B,CAA/B,CACA,mBACE,MAAC,IAAD,EACE,SAAS,KADX,CAEE,IAAI,KAFN,CAGE,SAAS,CAAC,KAHZ,CAIE,UAAU,CAAC,QAJb,CAKE,cAAc,CAAC,QALjB,CAME,OAAO,CAAE,CANX,wBAQE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAED,eAA7B,UACGD,KAAK,cACJ,KAAC,SAAD,EAAW,KAAK,CAAEA,KAAlB,EADI,cAGJ,KAAC,QAAD,EAAU,OAAO,CAAC,QAAlB,CAA2B,MAAM,CAAE,EAAnC,CAAuC,KAAK,CAAE,EAA9C,EAJJ,EARF,CAgBGD,WAAW,cACV,MAAC,UAAD,EAAY,OAAO,CAAC,QAApB,CAA6B,OAAO,CAAC,IAArC,WACGA,WADH,WADU,cAKV,KAAC,QAAD,EAAU,OAAO,CAAC,QAAlB,CAA2B,MAAM,CAAE,EAAnC,CAAuC,KAAK,CAAE,EAA9C,EArBJ,GADF,CA0BD,CA5BD,CAmCA,cAAeD,CAAAA,OAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { IconContext } from \"react-icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconState, { validValues } from \"./../IconState\";\n\nconst Weather = ({ temperature, state }) => {\n  const iconContextSize = useMemo(() => ({ size: \"6em\" }), []);\n  return (\n    <Grid\n      container\n      item\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      spacing={2}\n    >\n      <IconContext.Provider value={iconContextSize}>\n        {state ? (\n          <IconState state={state} />\n        ) : (\n          <Skeleton variant=\"circle\" height={80} width={80}></Skeleton>\n        )}\n      </IconContext.Provider>\n\n      {temperature ? (\n        <Typography display=\"inline\" variant=\"h3\">\n          {temperature}Â°C\n        </Typography>\n      ) : (\n        <Skeleton variant=\"circle\" height={80} width={80}></Skeleton>\n      )}\n    </Grid>\n  );\n};\n\nWeather.propTypes = {\n  temperature: PropTypes.number,\n  state: PropTypes.oneOf(validValues),\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}