{"ast":null,"code":"import _toConsumableArray from\"/home/julian/Desktop/gitReps/weather-app-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import moment from\"moment\";import{toCelsius}from\"../utilities\";var getChartData=function getChartData(data){var daysAhead=[0,1,2,3,4,5];var days=daysAhead.map(function(d){return moment().add(d,\"d\");});var dataAux=days.map(function(day){var tempObjArray=data.list.filter(function(item){var dayOfYear=moment.unix(item.dt).dayOfYear();return dayOfYear===day.dayOfYear();});var temps=tempObjArray.map(function(item){return item.main.temp;});return{dayHour:day.format(\"dddd\"),min:toCelsius(Math.min.apply(Math,_toConsumableArray(temps))),max:toCelsius(Math.max.apply(Math,_toConsumableArray(temps))),hasTemps:temps.length>0?true:false};}).filter(function(item){return item.hasTemps;});return dataAux;};export default getChartData;","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Utilities/transform/getChartData.jsx"],"names":["moment","toCelsius","getChartData","data","daysAhead","days","map","d","add","dataAux","day","tempObjArray","list","filter","item","dayOfYear","unix","dt","temps","main","temp","dayHour","format","min","Math","max","hasTemps","length"],"mappings":"yIAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,SAAT,KAA0B,cAA1B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAU,CAC7B,GAAMC,CAAAA,SAAS,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAlB,CACA,GAAMC,CAAAA,IAAI,CAAGD,SAAS,CAACE,GAAV,CAAc,SAACC,CAAD,QAAOP,CAAAA,MAAM,GAAGQ,GAAT,CAAaD,CAAb,CAAgB,GAAhB,CAAP,EAAd,CAAb,CACA,GAAME,CAAAA,OAAO,CAAGJ,IAAI,CACjBC,GADa,CACT,SAACI,GAAD,CAAS,CACZ,GAAMC,CAAAA,YAAY,CAAGR,IAAI,CAACS,IAAL,CAAUC,MAAV,CAAiB,SAACC,IAAD,CAAU,CAC9C,GAAMC,CAAAA,SAAS,CAAGf,MAAM,CAACgB,IAAP,CAAYF,IAAI,CAACG,EAAjB,EAAqBF,SAArB,EAAlB,CACA,MAAOA,CAAAA,SAAS,GAAKL,GAAG,CAACK,SAAJ,EAArB,CACD,CAHoB,CAArB,CAKA,GAAMG,CAAAA,KAAK,CAAGP,YAAY,CAACL,GAAb,CAAiB,SAACQ,IAAD,QAAUA,CAAAA,IAAI,CAACK,IAAL,CAAUC,IAApB,EAAjB,CAAd,CACA,MAAO,CACLC,OAAO,CAAEX,GAAG,CAACY,MAAJ,CAAW,MAAX,CADJ,CAELC,GAAG,CAAEtB,SAAS,CAACuB,IAAI,CAACD,GAAL,OAAAC,IAAI,oBAAQN,KAAR,EAAL,CAFT,CAGLO,GAAG,CAAExB,SAAS,CAACuB,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQN,KAAR,EAAL,CAHT,CAILQ,QAAQ,CAAER,KAAK,CAACS,MAAN,CAAe,CAAf,CAAmB,IAAnB,CAA0B,KAJ/B,CAAP,CAMD,CAda,EAebd,MAfa,CAeN,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACY,QAAf,EAfM,CAAhB,CAiBA,MAAOjB,CAAAA,OAAP,CACD,CArBD,CAuBA,cAAeP,CAAAA,YAAf","sourcesContent":["import moment from \"moment\";\nimport { toCelsius } from \"../utilities\";\n\nconst getChartData = (data) => {\n  const daysAhead = [0, 1, 2, 3, 4, 5];\n  const days = daysAhead.map((d) => moment().add(d, \"d\"));\n  const dataAux = days\n    .map((day) => {\n      const tempObjArray = data.list.filter((item) => {\n        const dayOfYear = moment.unix(item.dt).dayOfYear();\n        return dayOfYear === day.dayOfYear();\n      });\n\n      const temps = tempObjArray.map((item) => item.main.temp);\n      return {\n        dayHour: day.format(\"dddd\"),\n        min: toCelsius(Math.min(...temps)),\n        max: toCelsius(Math.max(...temps)),\n        hasTemps: temps.length > 0 ? true : false,\n      };\n    })\n    .filter((item) => item.hasTemps);\n\n  return dataAux;\n};\n\nexport default getChartData;\n"]},"metadata":{},"sourceType":"module"}