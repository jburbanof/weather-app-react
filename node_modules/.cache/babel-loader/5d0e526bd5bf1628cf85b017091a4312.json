{"ast":null,"code":"var _jsxFileName = \"/home/julian/Desktop/ReactCourse/react-weather-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport WelcomePage from \"./Pages/WelcomePage\";\nimport MainPage from \"./Pages/MainPage\";\nimport CityPage from \"./Pages/CityPage\";\nimport NotFound from \"./Pages/NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const initialValue = {\n    allWeather: {},\n    allChartData: {},\n    allForecastItemList: {}\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"SET_ALL_WEATHER\":\n        const weatherCity = action.payload;\n        const newAllWeather = { ...state.allWeather,\n          ...weatherCity\n        };\n        return { ...state,\n          ...newAllWeather\n        };\n\n      case \"SET_CHART_DATA\":\n        const chartDataCity = action.payload;\n        const newAllChartData = { ...state.allChartData,\n          ...chartDataCity\n        };\n        return { ...state,\n          newAllChartData\n        };\n\n      case \"SET_FORECAST_ITEM_LIST\":\n        const forecastItemListCity = action.payload;\n        const newAllForecastItemList = { ...state.allForecastItemList,\n          ...forecastItemListCity\n        };\n        return { ...state,\n          newAllForecastItemList\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialValue);\n  /*const [allWeather, setAllWeather] = useState({});\n  const [allChartData, setAllChartData] = useState({});\n  const [allForecastItemList, setAllForecastItemList] = useState({});\n  const onSetAllWeather = useCallback(\n    (weatherCity) => {\n      setAllWeather((allWeather) => {\n        return { ...allWeather, ...weatherCity };\n      });\n    },\n    [setAllWeather]\n  );\n  const onSetAllChartData = useCallback(\n    (chartDataCity) => {\n      setAllChartData((allChartData) => {\n        return { ...allChartData, ...chartDataCity };\n      });\n    },\n    [setAllChartData]\n  );\n  const onSetAllForecastItemList = useCallback(\n    (forecastItemListCity) => {\n      setAllForecastItemList((allForecastItemList) => {\n        return { ...allForecastItemList, ...forecastItemListCity };\n      });\n    },\n    [setAllForecastItemList]\n  );\n  const actions = useMemo(\n    () => ({\n      onSetAllWeather,\n      onSetAllChartData,\n      onSetAllForecastItemList,\n    }),\n    [onSetAllWeather, onSetAllChartData, onSetAllForecastItemList]\n  );\n  const data = useMemo(\n    () => ({\n      allWeather,\n      allChartData,\n      allForecastItemList,\n    }),\n    [allWeather, allChartData, allForecastItemList]\n  );*/\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(WelcomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        children: /*#__PURE__*/_jsxDEV(MainPage, {\n          data: state,\n          actions: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/city/:countryCode/:city\",\n        children: /*#__PURE__*/_jsxDEV(CityPage, {\n          data: state,\n          actions: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4lkJSiYZPtg3yU6cDCuaqNx534E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/julian/Desktop/ReactCourse/react-weather-app/src/App.jsx"],"names":["React","useReducer","BrowserRouter","Router","Switch","Route","WelcomePage","MainPage","CityPage","NotFound","App","initialValue","allWeather","allChartData","allForecastItemList","reducer","state","action","type","weatherCity","payload","newAllWeather","chartDataCity","newAllChartData","forecastItemListCity","newAllForecastItemList","dispatch"],"mappings":"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","sourcesContent":["import React, {  useReducer } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport WelcomePage from \"./Pages/WelcomePage\";\nimport MainPage from \"./Pages/MainPage\";\nimport CityPage from \"./Pages/CityPage\";\nimport NotFound from \"./Pages/NotFound\";\nconst App = () => {\n  const initialValue = {\n    allWeather: {},\n    allChartData: {},\n    allForecastItemList: {},\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"SET_ALL_WEATHER\":\n        const weatherCity = action.payload;\n        const newAllWeather = { ...state.allWeather, ...weatherCity };\n        return { ...state, ...newAllWeather };\n      case \"SET_CHART_DATA\":\n        const chartDataCity = action.payload;\n        const newAllChartData = { ...state.allChartData, ...chartDataCity };\n        return { ...state, newAllChartData };\n      case \"SET_FORECAST_ITEM_LIST\":\n        const forecastItemListCity = action.payload;\n        const newAllForecastItemList = { ...state.allForecastItemList, ...forecastItemListCity };\n        return { ...state, newAllForecastItemList };\n      default:\n          return state\n    }\n  };\n  const [state, dispatch] = useReducer(reducer, initialValue);\n  /*const [allWeather, setAllWeather] = useState({});\n  const [allChartData, setAllChartData] = useState({});\n  const [allForecastItemList, setAllForecastItemList] = useState({});\n  const onSetAllWeather = useCallback(\n    (weatherCity) => {\n      setAllWeather((allWeather) => {\n        return { ...allWeather, ...weatherCity };\n      });\n    },\n    [setAllWeather]\n  );\n  const onSetAllChartData = useCallback(\n    (chartDataCity) => {\n      setAllChartData((allChartData) => {\n        return { ...allChartData, ...chartDataCity };\n      });\n    },\n    [setAllChartData]\n  );\n  const onSetAllForecastItemList = useCallback(\n    (forecastItemListCity) => {\n      setAllForecastItemList((allForecastItemList) => {\n        return { ...allForecastItemList, ...forecastItemListCity };\n      });\n    },\n    [setAllForecastItemList]\n  );\n  const actions = useMemo(\n    () => ({\n      onSetAllWeather,\n      onSetAllChartData,\n      onSetAllForecastItemList,\n    }),\n    [onSetAllWeather, onSetAllChartData, onSetAllForecastItemList]\n  );\n  const data = useMemo(\n    () => ({\n      allWeather,\n      allChartData,\n      allForecastItemList,\n    }),\n    [allWeather, allChartData, allForecastItemList]\n  );*/\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <WelcomePage />\n        </Route>\n        <Route path=\"/main\">\n          <MainPage data={state} actions={dispatch} />\n        </Route>\n        <Route path=\"/city/:countryCode/:city\">\n          <CityPage data={state} actions={dispatch} />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}