{"ast":null,"code":"import moment from \"moment\";\nimport { toCelsius } from \"../utilities\";\n\nconst getForecastItemList = data => {\n  const interval = [3, 6, 9, 12, 15, 18];\n  const forecastItemListAux = data.list.filter((item, index) => interval.includes(index)).map(item => {\n    return {\n      hour: moment.unix(item.dt).hour(),\n      weekDay: moment.unix(item.dt).format(\"dddd\"),\n      state: item.weather[0].main.toLowerCase(),\n      temperature: toCelsius(item.main.temp)\n    };\n  });\n  return forecastItemListAux;\n};\n\nexport default getForecastItemList;","map":{"version":3,"sources":["/home/julian/Desktop/ReactCourse/react-weather-app/src/Utilities/transform/getForecastItemList.jsx"],"names":["moment","toCelsius","getForecastItemList","data","interval","forecastItemListAux","list","filter","item","index","includes","map","hour","unix","dt","weekDay","format","state","weather","main","toLowerCase","temperature","temp"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,mBAAmB,GAAIC,IAAD,IAAU;AACpC,QAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,CAAjB;AAEA,QAAMC,mBAAmB,GAAGF,IAAI,CAACG,IAAL,CACzBC,MADyB,CAClB,CAACC,IAAD,EAAOC,KAAP,KAAiBL,QAAQ,CAACM,QAAT,CAAkBD,KAAlB,CADC,EAEzBE,GAFyB,CAEpBH,IAAD,IAAU;AACb,WAAO;AACLI,MAAAA,IAAI,EAAEZ,MAAM,CAACa,IAAP,CAAYL,IAAI,CAACM,EAAjB,EAAqBF,IAArB,EADD;AAELG,MAAAA,OAAO,EAAEf,MAAM,CAACa,IAAP,CAAYL,IAAI,CAACM,EAAjB,EAAqBE,MAArB,CAA4B,MAA5B,CAFJ;AAGLC,MAAAA,KAAK,EAAET,IAAI,CAACU,OAAL,CAAa,CAAb,EAAgBC,IAAhB,CAAqBC,WAArB,EAHF;AAILC,MAAAA,WAAW,EAAEpB,SAAS,CAACO,IAAI,CAACW,IAAL,CAAUG,IAAX;AAJjB,KAAP;AAMD,GATyB,CAA5B;AAUA,SAAOjB,mBAAP;AACD,CAdD;;AAgBA,eAAeH,mBAAf","sourcesContent":["import moment from \"moment\";\nimport { toCelsius } from \"../utilities\";\n\nconst getForecastItemList = (data) => {\n  const interval = [3, 6, 9, 12, 15, 18];\n\n  const forecastItemListAux = data.list\n    .filter((item, index) => interval.includes(index))\n    .map((item) => {\n      return {\n        hour: moment.unix(item.dt).hour(),\n        weekDay: moment.unix(item.dt).format(\"dddd\"),\n        state: item.weather[0].main.toLowerCase(),\n        temperature: toCelsius(item.main.temp),\n      };\n    });\n  return forecastItemListAux;\n};\n\nexport default getForecastItemList\n"]},"metadata":{},"sourceType":"module"}