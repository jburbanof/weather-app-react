{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport getChartData from \"../Utilities/transform/getChartData\";\nimport { getForecastUrl } from \"../Utilities/urls\";\nimport getForecastItemList from \"../Utilities/transform/getForecastItemList\";\nimport { getCityCode } from \"../Utilities/utilities\";\n\nconst useCityPage = (onSetChartData, onSetForecastItemList) => {\n  _s();\n\n  const {\n    city,\n    countryCode\n  } = useParams();\n  useEffect(() => {\n    const getForecast = async () => {\n      const url = getForecastUrl(city, countryCode);\n      const cityCode = getCityCode(city, countryCode);\n\n      try {\n        const {\n          data\n        } = await axios.get(url);\n        const dataAux = getChartData(data);\n        onSetChartData({\n          [cityCode]: dataAux\n        });\n        const forecastItemListAux = getForecastItemList(data);\n        onSetForecastItemList({\n          [cityCode]: forecastItemListAux\n        });\n      } catch (error) {\n        console.log(\"Error\");\n      }\n    };\n\n    getForecast();\n  }, [city, countryCode, onSetForecastItemList, onSetChartData]);\n  return {\n    city,\n    countryCode\n  };\n};\n\n_s(useCityPage, \"K5IKzcF800rXzW86+R9cAGqvAj8=\", false, function () {\n  return [useParams];\n});\n\nexport default useCityPage;","map":{"version":3,"sources":["/home/julian/Desktop/ReactCourse/react-weather-app/src/Hooks/useCityPage.jsx"],"names":["useEffect","useParams","axios","getChartData","getForecastUrl","getForecastItemList","getCityCode","useCityPage","onSetChartData","onSetForecastItemList","city","countryCode","getForecast","url","cityCode","data","get","dataAux","forecastItemListAux","error","console","log"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,WAAW,GAAG,CAACC,cAAD,EAAiBC,qBAAjB,KAA2C;AAAA;;AAC7D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAwBV,SAAS,EAAvC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAG,YAAY;AAC9B,YAAMC,GAAG,GAAGT,cAAc,CAACM,IAAD,EAAOC,WAAP,CAA1B;AACA,YAAMG,QAAQ,GAAGR,WAAW,CAACI,IAAD,EAAOC,WAAP,CAA5B;;AACA,UAAI;AACF,cAAM;AAAEI,UAAAA;AAAF,YAAW,MAAMb,KAAK,CAACc,GAAN,CAAUH,GAAV,CAAvB;AACA,cAAMI,OAAO,GAAGd,YAAY,CAACY,IAAD,CAA5B;AAEAP,QAAAA,cAAc,CAAC;AAAE,WAACM,QAAD,GAAYG;AAAd,SAAD,CAAd;AAEA,cAAMC,mBAAmB,GAAGb,mBAAmB,CAACU,IAAD,CAA/C;AACAN,QAAAA,qBAAqB,CAAC;AAAE,WAACK,QAAD,GAAYI;AAAd,SAAD,CAArB;AACD,OARD,CAQE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,KAdD;;AAgBAT,IAAAA,WAAW;AACZ,GAlBQ,EAkBN,CAACF,IAAD,EAAOC,WAAP,EAAoBF,qBAApB,EAA2CD,cAA3C,CAlBM,CAAT;AAmBA,SAAO;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AACD,CAtBD;;GAAMJ,W;UAC0BN,S;;;AAuBhC,eAAeM,WAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport getChartData from \"../Utilities/transform/getChartData\";\nimport { getForecastUrl } from \"../Utilities/urls\";\nimport getForecastItemList from \"../Utilities/transform/getForecastItemList\";\nimport { getCityCode } from \"../Utilities/utilities\";\n\nconst useCityPage = (onSetChartData, onSetForecastItemList) => {\n  const { city, countryCode } = useParams();\n  useEffect(() => {\n    const getForecast = async () => {\n      const url = getForecastUrl(city, countryCode);\n      const cityCode = getCityCode(city, countryCode);\n      try {\n        const { data } = await axios.get(url);\n        const dataAux = getChartData(data);\n\n        onSetChartData({ [cityCode]: dataAux });\n\n        const forecastItemListAux = getForecastItemList(data);\n        onSetForecastItemList({ [cityCode]: forecastItemListAux });\n      } catch (error) {\n        console.log(\"Error\");\n      }\n    };\n\n    getForecast();\n  }, [city, countryCode, onSetForecastItemList, onSetChartData]);\n  return { city, countryCode };\n};\n\nexport default useCityPage;\n"]},"metadata":{},"sourceType":"module"}