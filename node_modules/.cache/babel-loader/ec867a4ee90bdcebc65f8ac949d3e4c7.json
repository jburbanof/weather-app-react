{"ast":null,"code":"var _jsxFileName = \"/home/julian/Desktop/gitReps/weather-app-react/src/Components/Weather/Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { IconContext } from \"react-icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconState, { validValues } from \"./../IconState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = ({\n  temperature,\n  state\n}) => {\n  _s();\n\n  const iconContextSize = useMemo(() => ({\n    size: \"6em\"\n  }), []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: iconContextSize,\n      children: state ? /*#__PURE__*/_jsxDEV(IconState, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"circle\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), temperature ? /*#__PURE__*/_jsxDEV(Typography, {\n      display: \"inline\",\n      variant: \"h3\",\n      children: [temperature, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      variant: \"circle\",\n      height: 80,\n      width: 80\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Weather, \"g/po2JQDXcp1dwlo8Thd2MvlQDE=\");\n\n_c = Weather;\nWeather.propTypes = {\n  temperature: PropTypes.number,\n  state: PropTypes.oneOf(validValues)\n};\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Components/Weather/Weather.jsx"],"names":["React","useMemo","PropTypes","Typography","Skeleton","IconContext","Grid","IconState","validValues","Weather","temperature","state","iconContextSize","size","propTypes","number","oneOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,IAAoBC,WAApB,QAAuC,gBAAvC;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA4B;AAAA;;AAC1C,QAAMC,eAAe,GAAGX,OAAO,CAAC,OAAO;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAP,CAAD,EAA0B,EAA1B,CAA/B;AACA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,MAFN;AAGE,IAAA,SAAS,EAAC,KAHZ;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,cAAc,EAAC,QALjB;AAME,IAAA,OAAO,EAAE,CANX;AAAA,4BAQE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAED,eAA7B;AAAA,gBACGD,KAAK,gBACJ,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cADI,gBAGJ,QAAC,QAAD;AAAU,QAAA,OAAO,EAAC,QAAlB;AAA2B,QAAA,MAAM,EAAE,EAAnC;AAAuC,QAAA,KAAK,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YARF,EAgBGD,WAAW,gBACV,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAC,IAArC;AAAA,iBACGA,WADH;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAKV,QAAC,QAAD;AAAU,MAAA,OAAO,EAAC,QAAlB;AAA2B,MAAA,MAAM,EAAE,EAAnC;AAAuC,MAAA,KAAK,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA5BD;;GAAMD,O;;KAAAA,O;AA8BNA,OAAO,CAACK,SAAR,GAAoB;AAClBJ,EAAAA,WAAW,EAAER,SAAS,CAACa,MADL;AAElBJ,EAAAA,KAAK,EAAET,SAAS,CAACc,KAAV,CAAgBR,WAAhB;AAFW,CAApB;AAKA,eAAeC,OAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { IconContext } from \"react-icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconState, { validValues } from \"./../IconState\";\n\nconst Weather = ({ temperature, state }) => {\n  const iconContextSize = useMemo(() => ({ size: \"6em\" }), []);\n  return (\n    <Grid\n      container\n      item\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      spacing={2}\n    >\n      <IconContext.Provider value={iconContextSize}>\n        {state ? (\n          <IconState state={state} />\n        ) : (\n          <Skeleton variant=\"circle\" height={80} width={80}></Skeleton>\n        )}\n      </IconContext.Provider>\n\n      {temperature ? (\n        <Typography display=\"inline\" variant=\"h3\">\n          {temperature}Â°C\n        </Typography>\n      ) : (\n        <Skeleton variant=\"circle\" height={80} width={80}></Skeleton>\n      )}\n    </Grid>\n  );\n};\n\nWeather.propTypes = {\n  temperature: PropTypes.number,\n  state: PropTypes.oneOf(validValues),\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}