{"ast":null,"code":"var _jsxFileName = \"/home/julian/Desktop/gitReps/weather-app-react/src/Components/Search/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { searchSchema } from \"../../Utilities/searchValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  callback\n}) => {\n  _s();\n\n  const [newCity, setNewCity] = useState(\"\");\n  const [newCountryCode, setNewCountryCode] = useState(\"\");\n\n  const updateCity = e => setNewCity(e.target.value);\n\n  const updateCountryCode = e => setNewCountryCode(e.target.value);\n\n  const createNewCity = async e => {\n    e.preventDefault();\n    let dataSearch = {\n      city: newCity,\n      countryCode: newCountryCode\n    };\n    const isValid = await searchSchema.isValid(dataSearch);\n\n    if (isValid) {\n      callback(newCity, newCountryCode);\n      setNewCountryCode(\"\");\n      setNewCity(\"\");\n    } else {\n      alert('Search error, both fields are required and country code must have two characters.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"searchForm\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"text\",\n      variant: \"outlined\",\n      label: \"City\",\n      color: \"primary\",\n      className: \"formItem\",\n      onChange: updateCity,\n      value: newCity,\n      name: \"city\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"text\",\n      variant: \"outlined\",\n      label: \"Country Code\",\n      color: \"primary\",\n      className: \"formItem\",\n      onChange: updateCountryCode,\n      value: newCountryCode,\n      name: \"city\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"formItem\",\n      onClick: createNewCity,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"ksOKGE9xyRdnDfEu1Y25wEvPVqQ=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Components/Search/Search.jsx"],"names":["React","useState","TextField","Button","searchSchema","Search","callback","newCity","setNewCity","newCountryCode","setNewCountryCode","updateCity","e","target","value","updateCountryCode","createNewCity","preventDefault","dataSearch","city","countryCode","isValid","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,YAAT,QAA6B,kCAA7B;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;;AACA,QAAMU,UAAU,GAAIC,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AACA,QAAMC,iBAAiB,GAAIH,CAAD,IAAOF,iBAAiB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlD;;AAEA,QAAME,aAAa,GAAG,MAAOJ,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACK,cAAF;AACA,QAAIC,UAAU,GAAG;AACfC,MAAAA,IAAI,EAAEZ,OADS;AAEfa,MAAAA,WAAW,EAAEX;AAFE,KAAjB;AAIA,UAAMY,OAAO,GAAG,MAAMjB,YAAY,CAACiB,OAAb,CAAqBH,UAArB,CAAtB;;AACA,QAAIG,OAAJ,EAAa;AACXf,MAAAA,QAAQ,CAACC,OAAD,EAAUE,cAAV,CAAR;AACAC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAF,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAJD,MAIK;AACHc,MAAAA,KAAK,CAAC,mFAAD,CAAL;AACD;AACF,GAdD;;AAgBA,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,SAAS,EAAC,UALZ;AAME,MAAA,QAAQ,EAAEX,UANZ;AAOE,MAAA,KAAK,EAAEJ,OAPT;AAQE,MAAA,IAAI,EAAC,MARP;AASE,MAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,SAAS,EAAC,UALZ;AAME,MAAA,QAAQ,EAAEQ,iBANZ;AAOE,MAAA,KAAK,EAAEN,cAPT;AAQE,MAAA,IAAI,EAAC,MARP;AASE,MAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,YAZF,eAuBE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,SAAS,EAAC,UAJZ;AAKE,MAAA,OAAO,EAAEO,aALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAzDD;;GAAMX,M;;KAAAA,M;AA2DN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { searchSchema } from \"../../Utilities/searchValidation\";\nconst Search = ({ callback }) => {\n  const [newCity, setNewCity] = useState(\"\");\n  const [newCountryCode, setNewCountryCode] = useState(\"\");\n  const updateCity = (e) => setNewCity(e.target.value);\n  const updateCountryCode = (e) => setNewCountryCode(e.target.value);\n\n  const createNewCity = async (e) => {\n    e.preventDefault();\n    let dataSearch = {\n      city: newCity,\n      countryCode: newCountryCode,\n    };\n    const isValid = await searchSchema.isValid(dataSearch);\n    if (isValid) {\n      callback(newCity, newCountryCode);\n      setNewCountryCode(\"\");\n      setNewCity(\"\");\n    }else{\n      alert('Search error, both fields are required and country code must have two characters.')\n    }\n  };\n\n  return (\n    <form className=\"searchForm\">\n      <TextField\n        type=\"text\"\n        variant=\"outlined\"\n        label=\"City\"\n        color=\"primary\"\n        className=\"formItem\"\n        onChange={updateCity}\n        value={newCity}\n        name=\"city\"\n        required\n      />\n      <TextField\n        type=\"text\"\n        variant=\"outlined\"\n        label=\"Country Code\"\n        color=\"primary\"\n        className=\"formItem\"\n        onChange={updateCountryCode}\n        value={newCountryCode}\n        name=\"city\"\n        required\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className=\"formItem\"\n        onClick={createNewCity}\n      >\n        Search\n      </Button>\n    </form>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}