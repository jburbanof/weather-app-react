{"ast":null,"code":"import { toCelsius, getCityCode } from \"../utilities\";\nimport { validValues } from \"../../Components/IconState\";\n\nconst getAllWeather = (response, city, countryCode) => {\n  const {\n    data\n  } = response;\n  const temperature = toCelsius(data.main.temp);\n  const stateFromServer = data.weather[0].main.toLowerCase();\n  const state = validValues.includes(stateFromServer) ? stateFromServer : null;\n  const propName = getCityCode(city, countryCode);\n  const propValue = {\n    temperature,\n    state\n  };\n  return {\n    [propName]: propValue\n  };\n};\n\nexport default getAllWeather;","map":{"version":3,"sources":["/home/julian/Desktop/ReactCourse/react-weather-app/src/Utilities/transform/getAllWeather.jsx"],"names":["toCelsius","getCityCode","validValues","getAllWeather","response","city","countryCode","data","temperature","main","temp","stateFromServer","weather","toLowerCase","state","includes","propName","propValue"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,cAAvC;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,WAAjB,KAAiC;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAWH,QAAjB;AACA,QAAMI,WAAW,GAAGR,SAAS,CAACO,IAAI,CAACE,IAAL,CAAUC,IAAX,CAA7B;AACA,QAAMC,eAAe,GAAGJ,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBH,IAAhB,CAAqBI,WAArB,EAAxB;AAEA,QAAMC,KAAK,GAAGZ,WAAW,CAACa,QAAZ,CAAqBJ,eAArB,IAAwCA,eAAxC,GAA0D,IAAxE;AACA,QAAMK,QAAQ,GAAGf,WAAW,CAACI,IAAD,EAAOC,WAAP,CAA5B;AACA,QAAMW,SAAS,GAAG;AAAET,IAAAA,WAAF;AAAeM,IAAAA;AAAf,GAAlB;AACA,SAAO;AACL,KAACE,QAAD,GAAYC;AADP,GAAP;AAGD,CAXD;;AAaA,eAAed,aAAf","sourcesContent":["import { toCelsius, getCityCode } from \"../utilities\";\nimport { validValues } from \"../../Components/IconState\";\n\nconst getAllWeather = (response, city, countryCode) => {\n  const { data } = response;\n  const temperature = toCelsius(data.main.temp);\n  const stateFromServer = data.weather[0].main.toLowerCase();\n\n  const state = validValues.includes(stateFromServer) ? stateFromServer : null;\n  const propName = getCityCode(city, countryCode);\n  const propValue = { temperature, state };\n  return {\n    [propName]: propValue,\n  };\n};\n\nexport default getAllWeather\n"]},"metadata":{},"sourceType":"module"}