{"ast":null,"code":"import React from\"react\";import Grid from\"@material-ui/core/Grid\";import ForecastItem from\"../ForecastItem\";import{validValues}from\"../IconState\";import{jsx as _jsx}from\"react/jsx-runtime\";var renderForecastItem=function renderForecastItem(forecast){var weekDay=forecast.weekDay,hour=forecast.hour,state=forecast.state,temperature=forecast.temperature;return/*#__PURE__*/_jsx(Grid,{\"data-testid\":\"forecast-item-container\",item:true,children:/*#__PURE__*/_jsx(ForecastItem,{weekDay:weekDay,hour:hour,state:state,temperature:temperature})},\"\".concat(weekDay,\" \").concat(hour));};var Forecast=function Forecast(_ref){var forecastItemList=_ref.forecastItemList;return/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"space-around\",alignItems:\"center\",children:forecastItemList.map(function(forecast){return renderForecastItem(forecast);})});};export default Forecast;","map":{"version":3,"sources":["/home/julian/Desktop/gitReps/weather-app-react/src/Components/Forecast/Forecast.jsx"],"names":["React","Grid","ForecastItem","validValues","renderForecastItem","forecast","weekDay","hour","state","temperature","Forecast","forecastItemList","map"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,OAASC,WAAT,KAA4B,cAA5B,C,2CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,GAAQC,CAAAA,OAAR,CAA8CD,QAA9C,CAAQC,OAAR,CAAiBC,IAAjB,CAA8CF,QAA9C,CAAiBE,IAAjB,CAAuBC,KAAvB,CAA8CH,QAA9C,CAAuBG,KAAvB,CAA8BC,WAA9B,CAA8CJ,QAA9C,CAA8BI,WAA9B,CACA,mBACE,KAAC,IAAD,EAAM,cAAY,yBAAlB,CAA4C,IAAI,KAAhD,uBACE,KAAC,YAAD,EACE,OAAO,CAAEH,OADX,CAEE,IAAI,CAAEC,IAFR,CAGE,KAAK,CAAEC,KAHT,CAIE,WAAW,CAAEC,WAJf,EADF,YAAyDH,OAAzD,aAAoEC,IAApE,EADF,CAUD,CAZD,CAcA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA0B,IAAvBC,CAAAA,gBAAuB,MAAvBA,gBAAuB,CACzC,mBACE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,cAAc,CAAC,cAA/B,CAA8C,UAAU,CAAC,QAAzD,UACGA,gBAAgB,CAACC,GAAjB,CAAqB,SAACP,QAAD,QAAcD,CAAAA,kBAAkB,CAACC,QAAD,CAAhC,EAArB,CADH,EADF,CAKD,CAND,CAmBA,cAAeK,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ForecastItem from \"../ForecastItem\";\nimport { validValues } from \"../IconState\";\n\nconst renderForecastItem = (forecast) => {\n  const { weekDay, hour, state, temperature } = forecast;\n  return (\n    <Grid data-testid=\"forecast-item-container\" item key={`${weekDay} ${hour}`} >\n      <ForecastItem\n        weekDay={weekDay}\n        hour={hour}\n        state={state}\n        temperature={temperature}\n      ></ForecastItem>\n    </Grid>\n  );\n};\n\nconst Forecast = ({ forecastItemList }) => {\n  return (\n    <Grid container justifyContent=\"space-around\" alignItems=\"center\">\n      {forecastItemList.map((forecast) => renderForecastItem(forecast))}\n    </Grid>\n  );\n};\n\nForecast.propTypes = {\n  forecastIltemList: PropTypes.arrayOf(\n    PropTypes.shape({\n      weekDay: PropTypes.string.isRequired,\n      hour: PropTypes.number.isRequired,\n      state: PropTypes.oneOf(validValues).isRequired,\n      temperature: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}