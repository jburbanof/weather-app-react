{"ast":null,"code":"import moment from \"moment\";\nimport { toCelsius } from \"../utilities\";\n\nconst getChartData = data => {\n  const daysAhead = [0, 1, 2, 3, 4, 5];\n  const days = daysAhead.map(d => moment().add(d, \"d\"));\n  const dataAux = days.map(day => {\n    const tempObjArray = data.list.filter(item => {\n      const dayOfYear = moment.unix(item.dt).dayOfYear();\n      return dayOfYear === day.dayOfYear();\n    });\n    const temps = tempObjArray.map(item => item.main.temp);\n    console.log(temps.length);\n    return {\n      dayHour: day.format(\"dddd\"),\n      min: toCelsius(Math.min(...temps)),\n      max: toCelsius(Math.max(...temps)),\n      hasTemps: temps.length > 0 ? true : false\n    };\n  }).filter(item => item.hastTemps = true);\n  console.log(dataAux);\n  return dataAux;\n};\n\nexport default getChartData;","map":{"version":3,"sources":["/home/julian/Desktop/ReactCourse/react-weather-app/src/Utilities/transform/getChartData.jsx"],"names":["moment","toCelsius","getChartData","data","daysAhead","days","map","d","add","dataAux","day","tempObjArray","list","filter","item","dayOfYear","unix","dt","temps","main","temp","console","log","length","dayHour","format","min","Math","max","hasTemps","hastTemps"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B,QAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAlB;AACA,QAAMC,IAAI,GAAGD,SAAS,CAACE,GAAV,CAAeC,CAAD,IAAOP,MAAM,GAAGQ,GAAT,CAAaD,CAAb,EAAgB,GAAhB,CAArB,CAAb;AACA,QAAME,OAAO,GAAGJ,IAAI,CACjBC,GADa,CACRI,GAAD,IAAS;AACZ,UAAMC,YAAY,GAAGR,IAAI,CAACS,IAAL,CAAUC,MAAV,CAAkBC,IAAD,IAAU;AAC9C,YAAMC,SAAS,GAAGf,MAAM,CAACgB,IAAP,CAAYF,IAAI,CAACG,EAAjB,EAAqBF,SAArB,EAAlB;AACA,aAAOA,SAAS,KAAKL,GAAG,CAACK,SAAJ,EAArB;AACD,KAHoB,CAArB;AAKA,UAAMG,KAAK,GAAGP,YAAY,CAACL,GAAb,CAAkBQ,IAAD,IAAUA,IAAI,CAACK,IAAL,CAAUC,IAArC,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,MAAlB;AACA,WAAO;AACLC,MAAAA,OAAO,EAAEd,GAAG,CAACe,MAAJ,CAAW,MAAX,CADJ;AAELC,MAAAA,GAAG,EAAEzB,SAAS,CAAC0B,IAAI,CAACD,GAAL,CAAS,GAAGR,KAAZ,CAAD,CAFT;AAGLU,MAAAA,GAAG,EAAE3B,SAAS,CAAC0B,IAAI,CAACC,GAAL,CAAS,GAAGV,KAAZ,CAAD,CAHT;AAILW,MAAAA,QAAQ,EAAEX,KAAK,CAACK,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B;AAJ/B,KAAP;AAMD,GAfa,EAgBbV,MAhBa,CAgBLC,IAAD,IAAWA,IAAI,CAACgB,SAAL,GAAiB,IAhBtB,CAAhB;AAiBET,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACF,SAAOA,OAAP;AACD,CAtBD;;AAwBA,eAAeP,YAAf","sourcesContent":["import moment from \"moment\";\nimport { toCelsius } from \"../utilities\";\n\nconst getChartData = (data) => {\n  const daysAhead = [0, 1, 2, 3, 4, 5];\n  const days = daysAhead.map((d) => moment().add(d, \"d\"));\n  const dataAux = days\n    .map((day) => {\n      const tempObjArray = data.list.filter((item) => {\n        const dayOfYear = moment.unix(item.dt).dayOfYear();\n        return dayOfYear === day.dayOfYear();\n      });\n      \n      const temps = tempObjArray.map((item) => item.main.temp);\n      console.log(temps.length)\n      return {\n        dayHour: day.format(\"dddd\"),\n        min: toCelsius(Math.min(...temps)),\n        max: toCelsius(Math.max(...temps)),\n        hasTemps: temps.length > 0 ? true : false,\n      };\n    })\n    .filter((item) => (item.hastTemps = true));\n    console.log(dataAux)\n  return dataAux;\n};\n\nexport default getChartData\n"]},"metadata":{},"sourceType":"module"}