{"version":3,"file":"main.cd16f8af04b48bae1e47.hot-update.js","sources":["webpack:///./src/Hooks/useCityList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport convertUnits from \"convert-units\";\nimport { validValues } from \"../Components/IconState\";\nimport { getCityCode } from \"../Utilities/utilities\";\nimport { getWeatherUrl } from \"../Utilities/urls\";\n\nconst useCityList = (cities) => {\n  const [allWeather, setAllWeather] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const setWeather = async (city, countryCode) => {\n      \n      const url = getWeatherUrl(city, countryCode)\n      console.log(url)\n\n      try {\n        const response = await axios.get(url);\n        const { data } = response;\n        const temperature = Number(\n          convertUnits(data.main.temp).from(\"K\").to(\"C\").toFixed(0)\n        );\n        const stateFromServer = data.weather[0].main.toLowerCase();\n\n        const state = validValues.includes(stateFromServer)\n          ? stateFromServer\n          : null;\n        const propName = getCityCode(city, countryCode);\n        const propValue = { temperature, state };\n        setAllWeather((allWeather) => ({\n          ...allWeather,\n          [propName]: propValue,\n        }));\n      } catch (error) {\n        if (error.response) {\n          setError(\"Weather Server Error\");\n        } else if (error.request) {\n          setError(\"Verify Your Connection\");\n        } else {\n          setError(\"Un-expected Error\");\n        }\n      }\n    };\n    cities.forEach(({ city, countryCode }) => {\n      setWeather(city, countryCode);\n    });\n  }, [cities]);\n  return { allWeather, error, setError };\n};\n\nexport default useCityList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA1CA;AACA;AA0CA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}