{"version":3,"file":"main.d241960052e718130f5f.hot-update.js","sources":["webpack:///./src/Components/Forecast/Forecast.jsx","webpack:///./src/Components/ForecastItem/ForecastItem.jsx","webpack:///./src/Components/IconState/index.jsx","webpack:///./src/Components/Weather/Weather.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ForecastItem from \"../ForecastItem\";\nimport { validValues } from \"../IconState\";\n\nconst renderForecastItem = (forecast) => {\n  const { weekDay, hour, state, temperature } = forecast;\n  return (\n    <Grid data-testid=\"forecast-item-container\" item key={`${weekDay} ${hour}`} >\n      <ForecastItem\n        weekDay={weekDay}\n        hour={hour}\n        state={state}\n        temperature={temperature}\n      ></ForecastItem>\n    </Grid>\n  );\n};\n\nconst Forecast = ({ forecastItemList }) => {\n  return (\n    <Grid container justify=\"space-around\" alignItems=\"center\">\n      {forecastItemList.map((forecast) => renderForecastItem(forecast))}\n    </Grid>\n  );\n};\n\nForecast.propTypes = {\n  forecastIltemList: PropTypes.arrayOf(\n    PropTypes.shape({\n      weekDay: PropTypes.string.isRequired,\n      hour: PropTypes.number.isRequired,\n      state: PropTypes.oneOf(validValues).isRequired,\n      temperature: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default Forecast;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconContext } from \"react-icons\";\nimport IconState, { validValues } from \"../IconState\";\n\nconst ForecastItem = ({ weekDay, hour, state, temperature }) => {\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Grid item>\n        <Typography>{weekDay}</Typography>\n      </Grid>\n      <Grid item>\n        <Typography>{hour}</Typography>\n      </Grid>\n      <Grid item>\n        <IconContext.Provider value={{ size: \"5em\" }}>\n          <IconState state={state} />\n        </IconContext.Provider>\n      </Grid>\n      <Grid item>\n        <Typography>{temperature}Â°C</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nForecastItem.propTypes = {\n  weekDay: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  state: PropTypes.oneOf(validValues).isRequired,\n  temperature: PropTypes.number.isRequired,\n};\n\nexport default ForecastItem;\n","export { default, validValues } from './IconState'","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { IconContext } from \"react-icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconState, {validValues} from \"../IconState\";\n\n\nconst Weather = ({ temperature, state }) => {\n  return (\n    <Grid container item direction='row' alignItems='center' justify='center' spacing={2} >\n      <IconContext.Provider value={{ size:'6em'}}>\n        <IconState state={state}/>\n      </IconContext.Provider>\n      \n      <Typography display=\"inline\" variant=\"h2\">\n        {temperature}\n      </Typography>\n    </Grid>\n  );\n};\n\nWeather.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  state: PropTypes.oneOf(validValues).isRequired\n};\n\nexport default Weather;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAPA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AApBA;AAqBA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAbA;AAcA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}