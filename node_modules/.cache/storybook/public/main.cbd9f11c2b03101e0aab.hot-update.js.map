{"version":3,"file":"main.cbd9f11c2b03101e0aab.hot-update.js","sources":["webpack:///./src/Components/CityList/CityList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport CityInfo from \"../CityInfo\";\nimport Weather from \"../Weather\";\n\nconst renderCityAndCountry = (eventOnClickCity) => (cityCountry, weather) => {\n  const { city, country } = cityCountry\n  return (\n    <ListItem button key={city} onClick={eventOnClickCity}>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item md={9} xs={12}>\n          <CityInfo city={city} country={country} />\n        </Grid>\n        <Grid item md={3} xs={12}>\n          {\n            weather ? \n            (<Weather temperature={weather.temperature} state={weather.state} />) : (\"No Data\")\n          }\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\nconst CityList = ({ cities, onClickCity }) => {\n  const [allWeather, setallWeather] = useState({})\n  useEffect(() => {\n    \n  }, [])\n\n  return (\n    <List>\n      {cities.map((cityAndCountry) =>\n        renderCityAndCountry(onClickCity)(cityAndCountry, allWeather[`${cityAndCountry}-${cityAndCountry}`])\n      )}\n    </List>\n  );\n};\n\nCityList.propTypes = {\n  cities: PropTypes.arrayOf(\n    PropTypes.shape({\n      city: PropTypes.string.isRequired,\n      country: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onClickCity: PropTypes.func.isRequired,\n};\n\nexport default CityList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAdA;AACA;AADA;AAeA;AACA;AAEA;AACA;AAFA;AAKA;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}