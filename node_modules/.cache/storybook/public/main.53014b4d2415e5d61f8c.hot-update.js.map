{"version":3,"file":"main.53014b4d2415e5d61f8c.hot-update.js","sources":["webpack:///./src/Components/CityInfo/CityInfo.jsx","webpack:///./src/Components/CityList/CityList.jsx","webpack:///./src/Components/Forcast/Forecast.jsx","webpack:///./src/Components/ForecastChart/ForecastChart.jsx","webpack:///./src/Components/ForecastItem/ForecastItem.jsx","webpack:///./src/Components/IconState/IconState.jsx","webpack:///./src/Components/Weather/Weather.jsx","webpack:///./src/Components/WeatherDetails/WeatherDetails.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst CityInfo =({city, country}) => {\n    return (\n        <>\n            <Typography display=\"inline\" variant=\"h4\">{city}  </Typography>\n            <Typography display=\"inline\" variant=\"h6\">{country}</Typography>\n        </>\n    )\n}\n\nCityInfo.propTypes = {\n    city: PropTypes.string.isRequired,\n    country: PropTypes.string.isRequired\n}\n\nexport default CityInfo\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CityInfo from \"../CityInfo\";\nimport Weather from \"../Weather\";\n\nconst renderCityAndCountry = eventOnClickCity=>cityCountry => {\n  const { city, country } = cityCountry;\n\n  return (\n    <li key={city} onClick={eventOnClickCity}>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item md={8} xs={12}>\n          <CityInfo city={city} country={country} />\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Weather temperature={10} state=\"sunny\" />\n        </Grid>\n      </Grid>\n    </li>\n  );\n};\n\nconst CityList = ({ cities, onClickCity }) => {\n  return (\n    <ul>{cities.map((cityCountry) => renderCityAndCountry(onClickCity)(cityCountry))}</ul>\n  );\n};\n\nCityList.propTypes = {\n  cities: PropTypes.array.isRequired,\n  onClickCity: PropTypes.func.isRequired\n};\n\nexport default CityList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ForecastItem from \"../ForecastItem\";\nimport { validValues } from \"../IconState\";\n\nconst renderForecastItem = (forecast) => {\n  const { weekDay, hour, state, temperature } = forecast;\n  return (\n    <Grid data-testid=\"forecast-item-container\" item key={`${weekDay} ${hour}`}>\n      <ForecastItem\n        weekDay={weekDay}\n        hour={hour}\n        state={state}\n        temperature={temperature}\n      ></ForecastItem>\n    </Grid>\n  );\n};\n\nconst Forecast = ({ forecastItemList }) => {\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      {forecastItemList.map((forecast) => renderForecastItem(forecast))}\n    </Grid>\n  );\n};\n\nForecast.propTypes = {\n  forecastIltemList: PropTypes.arrayOf(\n    PropTypes.shape({\n      weekDay: PropTypes.string.isRequired,\n      hour: PropTypes.number.isRequired,\n      state: PropTypes.oneOf(validValues).isRequired,\n      temperature: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default Forecast;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { LineChart } from 'recharts'\n\nconst ForecastChart = ({data}) => {\n    return (\n        <LineChart></LineChart>\n    )\n}\n\nForecastChart.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            dayHour: PropTypes.string.isRequired,\n            min: PropTypes.number.isRequired,\n            max: PropTypes.number.isRequired\n        })\n    ).isRequired\n}\n\nexport default ForecastChart\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { IconContext } from \"react-icons\";\nimport IconState, { validValues } from \"../IconState\";\n\nconst ForecastItem = ({ weekDay, hour, state, temperature }) => {\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Grid item>\n        <Typography>{weekDay}</Typography>\n      </Grid>\n      <Grid item>\n        <Typography>{hour}</Typography>\n      </Grid>\n      <Grid item>\n        <IconContext.Provider value={{ size: \"2em\" }}>\n          <IconState state={state} />\n        </IconContext.Provider>\n      </Grid>\n      <Grid item>\n        <Typography>{temperature}Â°C</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nForecastItem.propTypes = {\n  weekDay: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  state: PropTypes.oneOf(validValues).isRequired,\n  temperature: PropTypes.number.isRequired,\n};\n\nexport default ForecastItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  WiCloud,\n  WiDayCloudy,\n  WiDayFog,\n  WiDaySunny,\n  WiRain,\n} from \"react-icons/wi\";\n\n\nexport const validValues = [\"cloud\", \"cloud\", \"fog\", \"sunny\", \"rain\"];\n\nconst stateByName = {\n  cloud: WiCloud,\n  cloudy: WiDayCloudy,\n  fog: WiDayFog,\n  sunny: WiDaySunny,\n  rain: WiRain,\n};\n\nconst IconState = ({ state }) => {\n  const StateByName = stateByName[state];\n  return <StateByName />;\n};\n\nIconState.propTypes = {\n  states: PropTypes.oneOf(validValues).isRequired,\n};\n\nexport default IconState;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { IconContext } from \"react-icons\";\nimport IconState, {validValues} from \"../IconState/IconState\";\nconst Weather = ({ temperature, state }) => {\n  return (\n    <div>\n      <IconContext.Provider value={{ size:'5em'}}>\n        <IconState state={state}/>\n      </IconContext.Provider>\n      \n      <Typography display=\"inline\" variant=\"h3\">\n        {temperature}\n      </Typography>\n    </div>\n  );\n};\n\nWeather.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  state: PropTypes.oneOf(validValues).isRequired\n};\n\nexport default Weather;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\nconst WeatherDetails = ({humidity, wind}) => {\n    return (\n        <>\n            <Typography >Humidity:{humidity}%</Typography>\n            <Typography>Wind:{wind} km/h</Typography>\n        </>\n    )\n}\n\nWeatherDetails.propTypes = {\n    humidity: PropTypes.number.isRequired,\n    wind: PropTypes.number.isRequired\n}\n\nexport default WeatherDetails\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AARA;AASA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AALA;AAMA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAPA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AALA;AAMA;AACA;AAEA;AACA;AACA;AAHA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AApBA;AAqBA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAKA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAbA;AAcA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AARA;AASA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}