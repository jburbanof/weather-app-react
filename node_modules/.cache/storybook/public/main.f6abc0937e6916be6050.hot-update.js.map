{"version":3,"file":"main.f6abc0937e6916be6050.hot-update.js","sources":["webpack:///./src/Components/CityList/CityList.jsx"],"sourcesContent":["import React  from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport useCityList from \"../../Hooks/useCityList\";\nimport CityInfo from \"../CityInfo\";\nimport Weather from \"../Weather\";\nimport { getCityCode } from \"../../Utilities/utilities\"\n\nconst renderCityAndCountry = (eventOnClickCity) => (cityCountry, weather) => {\n  const { city, countryCode, country } = cityCountry;\n  return (\n    <ListItem button key={getCityCode(city, countryCode)} onClick={() => eventOnClickCity(city, countryCode)}>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item md={9} xs={12}>\n          <CityInfo city={city} country={country} />\n        </Grid>\n        <Grid item md={3} xs={12}>\n          <Weather\n            temperature={weather && weather.temperature}\n            state={weather && weather.state}\n          />\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\n\nconst CityList = ({ cities, onClickCity }) => {\n  \n  const {allWeather, error, setError} = useCityList(cities)\n\n  return (\n    <div>\n      {error && (\n        <Alert onClose={() => setError(null)} severity=\"error\">\n          {error}\n        </Alert>\n      )}\n      <List>\n        {cities.map((cityAndCountry) =>\n          renderCityAndCountry(onClickCity)(\n            cityAndCountry,\n            allWeather[getCityCode(cityAndCountry.city, cityAndCountry.countryCode)]\n          )\n        )}\n      </List>\n    </div>\n  );\n};\n\nCityList.propTypes = {\n  cities: PropTypes.arrayOf(\n    PropTypes.shape({\n      city: PropTypes.string.isRequired,\n      country: PropTypes.string.isRequired,\n      countryCode: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onClickCity: PropTypes.func.isRequired,\n};\n\nexport default CityList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAtBA;AAEA;;;AAFA;AAuBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}